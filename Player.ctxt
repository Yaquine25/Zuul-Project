#BlueJ class context
comment0.target=Player
comment0.text=\r\n\ Player\r\n\ @author\ Taki\r\n\ @version\ 2024\r\n
comment1.params=pNamePlayer\ pCurrentRoom
comment1.target=Player(java.lang.String,\ Room)
comment1.text=\r\n\ Player\ est\ le\ constructeur\ de\ la\ classe.\r\n\ @param\ pNamePlayer\ String\ le\ nom\ du\ joueur.\r\n\ @param\ pCurrentRoom\ Room\ la\ premi\u00E8re\ salle\ o\u00F9\ le\ joueur\ commence\ \u00E0\ jouer.\ \r\n
comment10.params=pItemName
comment10.target=boolean\ takeItem(java.lang.String)
comment10.text=\r\n\ takeItem\ permet\ de\ savoir\ si\ on\ peut\ prendre\ l'item\ ou\ pas.\r\n\ @param\ pItemName\ String\ est\ le\ nom\ de\ l'item\ en\ question.\r\n\ @return\ true\ ou\ false.\r\n
comment11.params=pItemName
comment11.target=boolean\ dropItem(java.lang.String)
comment11.text=\r\n\ DropItem\ permet\ de\ savoir\ si\ on\ peut\ d\u00E9poser\ l'item\ ou\ pas.\r\n\ @param\ pItemName\ String\ est\ le\ nom\ de\ l'item\ en\ question.\r\n\ @return\ true\ ou\ false.\r\n
comment12.params=pI
comment12.target=boolean\ eatBeans(java.lang.String)
comment12.text=\r\n\ eatBeans\ permet\ de\ savoir\ si\ le\ joueur\ a\ mang\u00E9\ "the\ magic\ beans".\r\n\ @param\ pI\ String\ est\ le\ nom\ de\ l'item.\r\n\ @return\ true\ ou\ false.\r\n
comment2.params=
comment2.target=int\ getWeight()
comment2.text=\r\n\ getWeight\ est\ un\ accesseur\ du\ poids.\r\n\ @return\ le\ poids\ d'un\ item.\r\n
comment3.params=
comment3.target=java.lang.String\ getNamePlayer()
comment3.text=\r\n\ getNamePlayer\ est\ un\ accesseur\ du\ nom\ du\ joueur.\r\n\ @return\ le\ nom\ du\ joueur.\r\n
comment4.params=
comment4.target=Room\ getCurrentRoom()
comment4.text=\r\n\ getCurrentRoom\ est\ un\ accesseur\ de\ la\ pi\u00E8ce\ actuelle.\r\n\ @return\ la\ pi\u00E8ce\ actuelle\ du\ joueur.\r\n
comment5.params=pCurrentRoom
comment5.target=void\ setCurrentRoom(Room)
comment5.text=\r\n\ setCurrentRoom\ est\ un\ modificateur\ de\ la\ pi\u00E8ce\ actuelle.\r\n\ @param\ pCurrentRoom,\ la\ pi\u00E8ce\ qui\ remplacera\ la\ pi\u00E8ce\ actuelle\ du\ joueur.\r\n
comment6.params=
comment6.target=java.util.Stack\ getPreviousRooms()
comment6.text=\r\n\ getPreviousRoom\ est\ un\ accesseur\ des\ pr\u00E9c\u00E9dentes\ pi\u00E8ces.\r\n\ @return\ les\ pi\u00E8ces\ pr\u00E9c\u00E9dentes\ du\ joueur.\r\n
comment7.params=
comment7.target=ItemList\ getItemCarried()
comment7.text=\r\n\ getItemCarried\ est\ un\ accesseur\ de\ la\ liste\ des\ items\ port\u00E9\ par\ le\ joueur.\r\n\ @return\ la\ liste\ des\ items\ port\u00E9\ par\ le\ joueur.\r\n
comment8.params=pDir
comment8.target=void\ goRoom(Command)
comment8.text=\r\n\ La\ proc\u00E9dure\ goRoom\ permet\ de\ controler\ le\ changement\ de\ pi\u00E8ce.\r\n\ @param\ pDir\ est\ une\ commande\ entr\u00E9e\ par\ l'utilisateur.\r\n
comment9.params=
comment9.target=boolean\ back()
comment9.text=\r\n\ La\ fonction\ back\ permet\ de\ revenir\ dans\ la\ pi\u00E8ce\ pr\u00E9c\u00E9dente.\r\n\ @return\ true\ ou\ false.\r\n
numComments=13
